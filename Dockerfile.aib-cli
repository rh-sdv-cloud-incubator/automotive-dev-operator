FROM --platform=${BUILDPLATFORM:-linux/arm64} ghcr.io/astral-sh/uv:latest AS uv

FROM fedora:40 AS builder
RUN dnf install -y make git && \
    dnf clean all && \
    rm -rf /var/cache/dnf
COPY --from=uv /uv /uvx /bin/
RUN git clone https://github.com/jumpstarter-dev/jumpstarter.git /src
RUN make -C /src build

FROM quay.io/devfile/base-developer-image:ubi9-latest

ARG TARGETARCH
USER 0

RUN mkdir -p /usr/local/bin && \
    curl -L https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux-${TARGETARCH}.tar.gz | \
    tar -xzf - -C /usr/local/bin oc kubectl && \
    chmod +x /usr/local/bin/oc /usr/local/bin/kubectl

RUN dnf install -y 'dnf-command(config-manager)' && \
    dnf config-manager --set-enabled codeready-builder-for-rhel-9-${TARGETARCH}-rpms || true && \
    dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm || true

# Install SCL repository to get Python 3.11
RUN dnf install -y https://repo.almalinux.org/almalinux/9/plus/${TARGETARCH}/Packages/a/almalinux-release-plus-9-1.el9.noarch.rpm && \
    dnf install -y 'dnf-command(config-manager)' && \
    dnf config-manager --set-enabled almalinux-plus-9 && \
    dnf install -y python3.11 python3.11-devel

RUN dnf install -y --allowerasing \
    gcc \
    gcc-c++ \
    make \
    automake \
    autoconf \
    libtool \
    pkgconfig \
    rpm-build \
    openssl-devel \
    bc \
    clang \
    libcap-devel \
    libcap-ng-devel \
    libmnl-devel \
    llvm \
    perl-devel \
    python3-docutils && \
    dnf clean all

RUN dnf install -y libusb || dnf install -y libusb1 || true && \
    dnf clean all

COPY --from=uv /uv /uvx /bin/
COPY --from=golang:1.23 /usr/local/go /usr/local/go
ENV PATH="/usr/local/go/bin:${PATH}"
ENV GOPATH="/go"

WORKDIR /workspace
COPY go.mod go.sum ./
COPY cmd/aib-cli cmd/aib-cli/
COPY api/ api/
COPY internal/ internal/

RUN go build -o /usr/local/bin/aib-cli cmd/aib-cli/main.go

# Use uv with Python 3.11
RUN uv venv --python python3.11 /jumpstarter
COPY --from=builder /src/dist/*.whl /tmp/
RUN VIRTUAL_ENV=/jumpstarter uv pip install /tmp/*.whl
ENV PATH="/jumpstarter/bin:${PATH}"

RUN mkdir -p /home/user/.config/jumpstarter/clients
RUN chown 10001:0 -R /home/user/{.config,.local,.cache} && chmod g+rwx -R /home/user/{.config,.local,.cache}

USER 10001
ENV HOME=/home/user
WORKDIR /projects
